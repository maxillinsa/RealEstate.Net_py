@model RealEstate.Models.Notification
@{
    ViewBag.Title = "Edit Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        function showLoader() {
            var loader = '<i class="fa-li fa fa-spinner fa-2x fa-spin">';
            $(".show-spin").fadeIn(400).html(loader);
        };
        $('#Save').bind('click', function () {
            showLoader();
            $("#FormProCreate").submit();
        });

    });
</script>

@using (Html.BeginForm("Edit", "Notification", FormMethod.Post, new { enctype = "multipart/form-data", id = "FormProCreate" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="row">
        <div class="box box-warning">
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#tab_1">Edit Notification </a></li>

                    <li class="pull-right">
                        <button type="button" id="Save" class="btn btn-success"> Save </button>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="tab_1" class="tab-pane active">
                        <div class="box box-warning">
                            <div class="box-body">
                                <div class="row">
                                    @Html.HiddenFor(model=> model.Id)
                                    <div class="col-md-12 form-group">
                                        <label>Title</label>
                                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = "Input Title..." })
                                        @Html.ValidationMessageFor(model => model.Title)
                                    </div>
                                   
                                </div>
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label for="IsDelete">Delete Status?</label>
                                        <div class="form-control">
                                            @if (Model.IsDelete == null || Model.IsDelete == false)
                                            {
                                                @Html.RadioButtonFor(model => model.IsDelete, true, new { value = true }) <span>Yes</span>
                                                @Html.RadioButtonFor(model => model.IsDelete, false, new { value = false, @checked = "checked" }) <span>No</span>
                                            }
                                            else
                                            {
                                                @Html.RadioButtonFor(model => model.IsDelete, true, new { value = true, @checked = "checked" }) <span>Yes</span>
                                                @Html.RadioButtonFor(model => model.IsDelete, false, new { value = false }) <span>No</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-6 form-group">
                                        <label for="IsDelete">Allow comment?</label>
                                        <div class="form-control">
                                            @if (Model.AllowComment == null || Model.AllowComment == false)
                                            {
                                                @Html.RadioButtonFor(model => model.AllowComment, true, new { value = true }) <span>Yes</span>
                                                @Html.RadioButtonFor(model => model.AllowComment, false, new { value = false, @checked = "checked" }) <span>No</span>
                                            }
                                            else
                                            {
                                                @Html.RadioButtonFor(model => model.AllowComment, true, new { value = true, @checked = "checked" }) <span>Yes</span>
                                                @Html.RadioButtonFor(model => model.AllowComment, false, new { value = false }) <span>No</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="box box-info">
                                    <div class="box-header">
                                        <h3 class="box-title">Details<small>infon.</small></h3>
                                        <!-- tools box -->
                                        <div class="pull-right box-tools">
                                            <button type="button" class="btn btn-info btn-sm" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse"><i class="fa fa-minus"></i></button>
                                        </div><!-- /. tools -->
                                    </div><!-- /.box-header -->
                                    <div class="box-body pad">
                                        @Html.TextAreaFor(model => model.Content, new { @id = "Content" })

                                    </div>
                                </div><!-- /.box -->
                                </div>
                        </div>
                    </div><!-- /.tab-Product Info -->

                </div><!-- /.tab-content -->
            </div>
        </div>
    </div>

}
<script>


        $(function () {
            tinyMCE.init({
                selector: '#Content',
                height: 300,
                theme: 'modern',
                plugins: [
                     "advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker",
                     "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                     "save table contextmenu directionality emoticons template paste textcolor"
                ],
                toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | l      ink image | print preview media fullpage | forecolor backcolor emoticons",
                style_formats: [
                     { title: 'Bold text', inline: 'b' },
                     { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
                     { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
                     { title: 'Example 1', inline: 'span', classes: 'example1' },
                     { title: 'Example 2', inline: 'span', classes: 'example2' },
                     { title: 'Table styles' },
                     { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
                ], file_browser_callback: RoxyFileBrowser
            });

        });
        function RoxyFileBrowser(field_name, url, type, win) {
            var roxyFileman = '@Url.Content("~/Content/AdminDashboard/filebrowser/index.html")';
            if (roxyFileman.indexOf("?") < 0) {
                roxyFileman += "?type=" + type;
            }
            else {
                roxyFileman += "&type=" + type;
            }
            roxyFileman += '&input=' + field_name + '&value=' + document.getElementById(field_name).value;
            tinyMCE.activeEditor.windowManager.open({
                file: roxyFileman,
                title: 'File manager',
                width: 850,
                height: 650,
                resizable: "yes",
                plugins: "media",
                inline: "yes",
                close_previous: "no"
            }, { window: win, input: field_name });
            return false;
        }
</script>